{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleKeyPress","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"2NAMO,IAAMA,EAAb,oI,yXAAA,wBACEC,MAAc,CACZC,WAAY,2BAFhB,EAaEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CACZH,WAAW,KAAD,OAAOE,EAAME,IAAb,MAEb,EAjBH,wEAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eACzC,GAPH,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAC5C,GAXH,oBAmBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,oBACEA,UAAU,eADZ,UAGkB,4BAAfT,GACC,+DAIDA,MAIR,KApCH,GAAyBU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,Q","file":"static/js/main.5366f70c.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state:State = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyPress);\n  }\n\n  handleKeyPress = (event: KeyboardEvent):void => {\n    this.setState({\n      pressedKey: ` [${event.key}]`,\n    });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p\n          className=\"App__message\"\n        >\n          {pressedKey !== 'Nothing was pressed yet' && (\n            <>\n              The last pressed key is\n            </>\n          )}\n          {pressedKey}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}